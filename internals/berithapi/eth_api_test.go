package berithapi

import (
	"encoding/hex"
	"fmt"
	"testing"

	"github.com/BerithFoundation/berith-chain/core/types"
	"github.com/BerithFoundation/berith-chain/rlp"
)

func TestDecode(t *testing.T) {
	var encodedData = "0xf9079f01843b9aca00830885918080b9074c60806040526001805534801561001457600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106e8806100646000396000f3fe60806040526004361061002d5760003560e01c806350312c9e146102a057806369bbe5c7146102cb5761029b565b3661029b57662386f26fc10000341461007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610072906103f3565b60405180910390fd5b6000151560026000600154815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610121576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101189061045f565b60405180910390fd5b600160026000600154815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f214c468dea5945dee0ff7ef734a9b40f13735541d39f68ba6580552df407eafd33346040516101bd9291906104d9565b60405180910390a1666a94d74f43000047036102995760003373ffffffffffffffffffffffffffffffffffffffff16476040516101f990610533565b60006040518083038185875af1925050503d8060008114610236576040519150601f19603f3d011682016040523d82523d6000602084013e61023b565b606091505b505090508061027f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027690610594565b60405180910390fd5b60016000815480929190610292906105e3565b9190505550505b005b600080fd5b3480156102ac57600080fd5b506102b56102f6565b6040516102c2919061062b565b60405180910390f35b3480156102d757600080fd5b506102e061038c565b6040516102ed919061062b565b60405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610386576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037d90610692565b60405180910390fd5b47905090565b6000600154905090565b600082825260208201905092915050565b7f506c656173652073656e64206f6e6c7920302e30312065746865720000000000600082015250565b60006103dd601b83610396565b91506103e8826103a7565b602082019050919050565b6000602082019050818103600083015261040c816103d0565b9050919050565b7f506c6561736520747279206174206e65787420726f756e640000000000000000600082015250565b6000610449601883610396565b915061045482610413565b602082019050919050565b600060208201905081810360008301526104788161043c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104aa8261047f565b9050919050565b6104ba8161049f565b82525050565b6000819050919050565b6104d3816104c0565b82525050565b60006040820190506104ee60008301856104b1565b6104fb60208301846104ca565b9392505050565b600081905092915050565b50565b600061051d600083610502565b91506105288261050d565b600082019050919050565b600061053e82610510565b9150819050919050565b7f4661696c656420746f2073656e64000000000000000000000000000000000000600082015250565b600061057e600e83610396565b915061058982610548565b602082019050919050565b600060208201905081810360008301526105ad81610571565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105ee826104c0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106205761061f6105b4565b5b600182019050919050565b600060208201905061064060008301846104ca565b92915050565b7f4f6e6c79206f776e65722063616e2072756e2074686973206d6574686f642e00600082015250565b600061067c601f83610396565b915061068782610646565b602082019050919050565b600060208201905081810360008301526106ab8161066f565b905091905056fea26469706673582212209310194a9961bd98de7c0eda71a7d1da5c793da8f53c4aff64c1f6a49376f9a864736f6c634300080d003381f7a0a3ca6c3055512ae8c021b9124cd00c3b17ed9a00f546f9db11d21bf53a65eb99a064d72dc7b17be5930719edc28e5c694889c79d13e5acca524987f6c989a4795b"
	var berithTx = new(types.Transaction)
	var ethTx = new(types.OriginTransaction)

	if err := rlp.DecodeBytes([]byte(encodedData), ethTx); err != nil {
		t.Error("EthTx Err : ", err)
	}
	fmt.Println(ethTx)

	if err := rlp.DecodeBytes([]byte(encodedData), berithTx); err != nil {
		t.Error("BerithTx Err : ", err)
	}
	fmt.Println(berithTx)
}

func TestByteDecoder(t *testing.T) {
	var data = []byte("")
	t.Log(hex.EncodeToString(data))
}
